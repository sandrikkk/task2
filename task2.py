def NextPerm(s):  
    Len = len(s) # len() ფუნქცია - ითვლის ასოების რაოდენობას სტრიქონში. 
    EndChar = s[Len-1] # ეძებს შეტანილი სტრიქონის ბოლო ასოს, მაგალთად ავიღოთ სტრიქონი : lmno - მისი ბოლო ასო იქნება o.
    for i in range (Len-2,-1,-1): # 2 ციკლი ტრიალებს, მაგ(lmno - ს საფუძველზე , Len - 2 , ანუ ასო n დან  l - მდე , ერთის ბიჯით) 
        c = s[i]
        if(c < EndChar): # ადარებს c ს მნიშვნელობას სტრიქონის ბოლო ასოს.
            pasuxi = s[:i]# თუ მმე 6 ხაზზე მოცემული პირობა დაკმაყოფილდება მაშინ Slice ის მეშვეობით ცვლად pasuxs ენიჭება მნიშვნელობა 
            for j in range(Len-1,i,-1): # ამ შემთხვევაში ციკლი სტრიქონის ბოლო ასოდან , i მნიშვნელობამდე , -1 ის ბიჯით.
                if(s[j] > c): 
                    break #  მაშინ Break - ის საშუალებით დამთავრდება ციკლის მუშაობა.
            pasuxi = pasuxi + s[j] 
            index = j
            for j in range(Len-1,i,-1): # ამ მჯერად J ცვლადის მნიშვნელობა იცვლება, 1 ის ბიჯით i ცვლადის მნიშვნელობამდე
                if(j == index):
                    pasuxi = pasuxi + c 
                else:
                    pasuxi = pasuxi + s[j]
            return(pasuxi) #თუ შიდა ციკლი დასრულდა, მაშინ აბრუნებს მოცემულ პასუხს 
        EndChar = c #e გადაეცემა მნიშვნელობა !
    return("no answer") # თუ გარე ციკლი დასრულდა დააბრუნებს მოცემულ პასუხსს !
 
raodenoba = int(input())
for test in range(raodenoba): # ციკლი დატრიალდება იმდენჯერ , რა რაოდენობასაც მივუთითებთ.
    inp=str(input()) # მაგალითად , თუ 23 - ე ხაზში 6 ჩავწერთ , მოგვეცემა საშუალება 6 სტრიქონი შემოვიტანოთ.
    print (NextPerm(inp)) # იძახებს ფუნქციას და გადააქვს არგუმენტად ის მნიშვნელობები, რომლებსაც კლავიატურით შევიტანთ.
